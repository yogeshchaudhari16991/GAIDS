/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * packetReport.java
 *
 * Created on Mar 15, 2012, 7:27:39 PM
 */
package IDS;

import FTPServer.DatabaseConnection;

import FTPServer.DatePicker;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Inbo
 */
public class packetReport extends javax.swing.JFrame implements Observer{

    Vector data = new Vector();
    Vector heading = new Vector();
    DatabaseConnection db;
    ResultSet rs;
    
    String text="";
    

    /** Creates new form packetReport */
    public packetReport() {
        initComponents();
        db = new DatabaseConnection();
        db.dbconnection();
        
        String co="#FFFD66";
       Color color=Color.decode(co);
        packettable.getTableHeader().setBackground(color);
        packettable.getTableHeader().setForeground(Color.magenta);
        packettable.getTableHeader().setFont(new Font("Lucida Bright", Font.BOLD, 20));
        
        setLocationRelativeTo(null);
        setTitle("Packet Report");
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
       packettable.setAutoResizeMode(packettable.AUTO_RESIZE_OFF);
       packettable.getColumnModel().getColumn(0).setPreferredWidth(100);
       packettable.getColumnModel().getColumn(1).setPreferredWidth(200);
       packettable.getColumnModel().getColumn(2).setPreferredWidth(200);
       packettable.getColumnModel().getColumn(3).setPreferredWidth(180);
       packettable.getColumnModel().getColumn(4).setPreferredWidth(110);
       
       heading.add("Protocol");
       heading.add("Destination IP");
       heading.add("Source IP");
       heading.add("Status");
       heading.add("Date");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        cmbstatus = new javax.swing.JComboBox();
        btnFrom = new javax.swing.JButton();
        btnTo = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        packettable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        jLabel1.setText("From Date");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        jLabel2.setText("Satus");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        jLabel3.setText("To Date");

        txtFrom.setEditable(false);
        txtFrom.setFont(new java.awt.Font("Lucida Bright", 1, 14));

        txtTo.setEditable(false);
        txtTo.setFont(new java.awt.Font("Lucida Bright", 1, 14));

        cmbstatus.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        cmbstatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select...", "Allowed", "Blocked" }));

        btnFrom.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        try{
            btnFrom.setIcon(new ImageIcon(new File("").getCanonicalPath() + "/images/calendar.gif"));
        }
        catch(Exception e){
            e.printStackTrace();
        }
        btnFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFromActionPerformed(evt);
            }
        });

        btnTo.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        try{
            btnTo.setIcon(new ImageIcon(new File("").getCanonicalPath() + "/images/calendar.gif"));
        }
        catch(Exception e){
            e.printStackTrace();
        }
        btnTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(190, 190, 190))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        packettable.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        packettable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Protocol", "Destination IP", "Source IP", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        packettable.setRowHeight(20);
        packettable.setSelectionBackground(new java.awt.Color(255, 204, 0));
        packettable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(packettable);

        jButton1.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(712, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFromActionPerformed
        // TODO add your handling code here:
//        DatePicker.str = "from";
//        dd = new DateDialog(this, true);
//        dd.setVisible(true);
        
        DatePicker dp = new DatePicker(this, new Date());
        // previously selected date
        Date selectedDate = dp.parseDate(txtFrom.getText());
        dp.setSelectedDate(selectedDate);
        dp.start(txtFrom);
        text = "from";
    }//GEN-LAST:event_btnFromActionPerformed

    private void btnToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToActionPerformed
        // TODO add your handling code here:
       if (!txtFrom.equals("")) {
            // instantiate the DatePicker
            DatePicker dp = new DatePicker(this, new Date());
            // previously selected date
            Date selectedDate = dp.parseDate(txtTo.getText());
            dp.setSelectedDate(selectedDate);
            dp.start(txtTo);
            text="to";
       }
    }//GEN-LAST:event_btnToActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        report();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void report() {
        try {
            
            String from=txtFrom.getText();
            String to=txtTo.getText();
            
            System.out.println("From : "+from);
            System.out.println("To : "+to);
            packettable.removeAll();
            data = new Vector();
            String query = "";
            System.err.println();
            if ((txtFrom.getText().equals("") && cmbstatus.getSelectedItem().toString().equals("Select...")) || (txtTo.getText().equals("") && cmbstatus.getSelectedItem().toString().equals("Select..."))) {
                JOptionPane.showMessageDialog(this, "Please Select Search Criteria");
            }

            if (!txtFrom.getText().equals("") && !txtTo.getText().equals("") && cmbstatus.getSelectedItem().equals("Select...")) {
                query = "select * from packets where date between '" + txtFrom.getText() + "' and '" + txtTo.getText() + "'";
            }

            if (txtFrom.getText().equals("") || txtTo.getText().equals("") && !cmbstatus.getSelectedItem().equals("Select...")) {
                query = "select * from packets where status like '" + cmbstatus.getSelectedItem().toString() + "%'";
            }

            if (!txtFrom.getText().equals("") && !txtTo.getText().equals("") && !cmbstatus.getSelectedItem().equals("Select...")) {
                query = "select * from packets where date between '" + txtFrom.getText() + "' and '" + txtTo.getText() + "' and status like '" + cmbstatus.getSelectedItem().toString() + "%'";
            }

            rs = db.getResultSet(query);
            Vector temp;
            while (rs.next()) {
                temp = new Vector();
                temp.add(rs.getString(1));
                temp.add(rs.getString(2));
                temp.add(rs.getString(3));
                temp.add(rs.getString(4));
                temp.add(rs.getString(5));
                data.add(temp);
                
            }
            packettable.setModel(new javax.swing.table.DefaultTableModel(data, heading));
            
       packettable.setAutoResizeMode(packettable.AUTO_RESIZE_OFF);
       packettable.getColumnModel().getColumn(0).setPreferredWidth(100);
       packettable.getColumnModel().getColumn(1).setPreferredWidth(200);
       packettable.getColumnModel().getColumn(2).setPreferredWidth(200);
       packettable.getColumnModel().getColumn(3).setPreferredWidth(180);
       packettable.getColumnModel().getColumn(4).setPreferredWidth(110);
       
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(packetReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(packetReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(packetReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(packetReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new packetReport().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFrom;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTo;
    private javax.swing.JComboBox cmbstatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable packettable;
    public static javax.swing.JTextField txtFrom;
    public static javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables


public void update(Observable o, Object arg) {
        //update method
        Calendar calendar = (Calendar) arg;
        DatePicker dp = (DatePicker) o;
//        System.out.println("picked=" + dp.formatDate(calendar));
        if (text.equals("from")) {
            txtFrom.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
            //Query = Query + " bookingdate between #" + txtFrom.getText() + "# and ";
        }
        if (text.equals("to")) {
            txtTo.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
            //Query = Query + " #" + txtTo.getText() + "# ";
        }
    }

}
